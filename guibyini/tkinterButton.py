__author__ = 'chris.maue'

import config_parser

class Button(object):
    def __init__(self):
        self.activeBackgroundColor = str()
        self.activeForegroundColor = str()
        self.anchor = str()
        self.backgroundColor = str()
        self.bitmap = str()
        self.borderwidth = int()
        self.command = int()
        self.compound = str()
        self.cursor = str()
        self.default = str()
        self.disabledForeground = str()
        self.font = str()
        self.fontSize = int()
        self.foregroundColor = str()
        self.height = int()
        self.highlightBackgroundColor = str()
        self.highlightColor = str()
        self.highlightThickness = int()
        self.image = str()
        self.justify = str()
        self.overRelief = str()
        self.padX = int()
        self.padY = int()
        self.relief = str()
        self.repeatDelay = int()
        self.repeatInterval = int()
        self.state = str()
        self.takeFocus = str()
        self.text = str()
        self.textVariable = str()
        self.underline = str()
        self.width = int()
        self.wrapLength = int()
        self.iniFile = str()
        self.section = str()


    def apply_settings(self):
        if self.buttonSettings[self.buttonsCreated].backgroundColor != '':
            self.button.config(background=self.buttonSettings[self.buttonsCreated].backgroundColor)
        if self.buttonBitmap != '':
            self.button.config(bitmap=self.buttonBitmap)
        if self.buttonBorderwidth != '':
            self.button.config(borderwidth=int(self.buttonBorderwidth))
        if self.buttonCommand != '':
            self.button.config(command=lambda instance=int(self.buttonCommand): gui_controls.callback(self.parent, instance))
        if self.buttonCompound != '':
            self.button.config(compound=self.buttonCompound)
        if self.buttonCursor != '':
            self.button.config(cursor=self.buttonCursor)
        if self.buttonDefault != '':
            self.button.config(default=self.buttonDefault)
        if self.buttonDisableForeground != '':
            self.button.config(disableforeground=self.buttonDisableForeground)
        if self.buttonFont != '':
            self.button.config(font=(self.buttonFont, int(self.buttonFontSize)))
        if self.buttonForegroundColor != '':
            self.button.config(foreground=self.buttonForegroundColor)
        if self.buttonHeight != '':
            self.button.config(height=int(self.buttonHeight))
        if self.buttonHighlightBackground != '':
            self.button.config(highlightbackground=self.buttonCommand)
        if self.buttonHighlightColor != '':
            self.button.config(highlightcolor=self.buttonCommand)
        if self.buttonHighlightThickness != '':
            self.button.config(highlightthickness=int(self.buttonHighlightThickness))
        if self.buttonImage != '':
            self.button.config(image=self.buttonImage)
        if self.buttonJustify != '':
            self.button.config(justify=self.buttonJustify)
        if self.buttonOverRelief != '':
            self.button.config(overrelief=self.buttonOverRelief)
        if self.buttonPadX != '':
            self.button.config(padx=int(self.buttonPadX))
        if self.buttonPadY != '':
            self.button.config(pady=int(self.buttonPadY))
        if self.buttonRelief != '':
            self.button.config(relief=self.buttonRelief)
        if self.buttonRepeatDelay != '':
            self.button.config(repeatdelay=int(self.buttonRepeatDelay))
        if self.buttonRepeatInterval != '':
            self.button.config(repeatinterval=int(self.buttonRepeatInterval))
        if self.buttonState != '':
            self.button.config(state=self.buttonState)
        if self.buttonTakeFocus != '':
            self.button.config(takefocus=self.buttonTakeFocus)
        if self.buttonText != '':
            self.button.config(text=self.buttonText)
        if self.buttonTextVariable != '':
            self.button.config(textvariable=self.buttonTextVariable)
        if self.buttonUnderline != '':
            self.button.config(underline=self.buttonUnderline)
        if self.buttonWidth != '':
            self.button.config(width=int(self.buttonWidth))
        if self.buttonWrapLength != '':
            self.button.config(wraplength=int(self.buttonWrapLength))
        if self.buttonPlaceAnchor != '':
            self.button.place_configure(anchor=self.buttonPlaceAnchor)
        if self.buttonPlaceBordermode != '':
            self.button.place_configure(bordermode=self.buttonPlaceBordermode)
        if self.buttonPlaceHeight != '':
            self.button.place_configure(height=int(self.buttonPlaceHeight))
        if self.buttonPlaceWidth != '':
            self.button.place_configure(width=int(self.buttonPlaceWidth))
        if self.buttonPlaceRelHeight != '':
            self.button.place_configure(relheight=int(self.buttonPlaceRelHeight))
        if self.buttonPlaceRelWidth != '':
            self.button.place_configure(relwidth=int(self.buttonPlaceRelWidth))
        if self.buttonPlaceRelX != '':
            self.button.place_configure(relx=int(self.buttonPlaceRelX))
        if self.buttonPlaceRelY != '':
            self.button.place_configure(rely=int(self.buttonPlaceRelY))
        if self.buttonPlaceOffsetX != '':
            self.button.place_configure(x=int(self.buttonPlaceOffsetX))
        if self.buttonPlaceOffsetY != '':
            self.button.place_configure(y=int(self.buttonPlaceOffsetY))