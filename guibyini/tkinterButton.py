__author__ = 'chris.maue'

import config_parser

class Button(object):
    def __init__(self):
        self.activeBackgroundColor = str()
        self.activeForegroundColor = str()
        self.anchor = str()
        self.backgroundColor = str()
        self.bitmap = str()
        self.borderwidth = int()
        self.command = int()
        self.compound = str()
        self.cursor = str()
        self.default = str()
        self.disableForeground = str()
        self.font = str()
        self.fontSize = int()
        self.foregroundColor = str()
        self.height = int()
        self.highlightBackgroundColor = str()
        self.highlightColor = str()
        self.highlightThickness = int()
        self.image = str()
        self.justify = str()
        self.overRelief = str()
        self.padX = int()
        self.padY = int()
        self.relief = str()
        self.repeatDelay = int()
        self.repeatInterval = int()
        self.state = str()
        self.takeFocus = str()
        self.text = str()
        self.textVariable = str()
        self.underline = str()
        self.width = int()
        self.wrapLength = int()
        self.iniFile = str()
        self.section = str()


    def read_settings(self):
        self.backgroundColor = config_parser.ConfigSectionMap(self.iniFile, self.section, 'background color')
        self.bitmap = config_parser.ConfigSectionMap(self.iniFile, self.section, 'bitmap')
        self.borderwidth = config_parser.ConfigSectionMap(self.iniFile, self.section, 'border width')
        self.command = config_parser.ConfigSectionMap(self.iniFile, self.section, 'command')
        self.compound = config_parser.ConfigSectionMap(self.iniFile, self.section, 'compound')
        self.cursor = config_parser.ConfigSectionMap(self.iniFile, self.section, 'cursor')
        self.default = config_parser.ConfigSectionMap(self.iniFile, self.section, 'default')
        self.disableForeground = config_parser.ConfigSectionMap(self.iniFile, self.section, 'disable foreground')
        self.font = config_parser.ConfigSectionMap(self.iniFile, self.section, 'font')
        self.fontSize = config_parser.ConfigSectionMap(self.iniFile, self.section, 'font size')
        self.foregroundColor = config_parser.ConfigSectionMap(self.iniFile, self.section, 'foreground color')
        self.height = config_parser.ConfigSectionMap(self.iniFile, self.section, 'height')
        self.highlightBackgroundColor = config_parser.ConfigSectionMap(self.iniFile, self.section,
                                                                       'highlight background color')
        self.highlightColor = config_parser.ConfigSectionMap(self.iniFile, self.section, 'highlight color')
        self.highlightThickness = config_parser.ConfigSectionMap(self.iniFile, self.section, 'highlight thickness')
        self.image = config_parser.ConfigSectionMap(self.iniFile, self.section, 'image')
        self.justify = config_parser.ConfigSectionMap(self.iniFile, self.section, 'justify')
        self.overRelief = config_parser.ConfigSectionMap(self.iniFile, self.section, 'over relief')
        self.padX = config_parser.ConfigSectionMap(self.iniFile, self.section, 'pad x')
        self.padY = config_parser.ConfigSectionMap(self.iniFile, self.section, 'pad y')
        self.relief = config_parser.ConfigSectionMap(self.iniFile, self.section, 'relief')
        self.repeatDelay = config_parser.ConfigSectionMap(self.iniFile, self.section, 'repeat delay')
        self.repeatInterval = config_parser.ConfigSectionMap(self.iniFile, self.section, 'repeat interval')
        self.state = config_parser.ConfigSectionMap(self.iniFile, self.section, 'state')
        self.takeFocus = config_parser.ConfigSectionMap(self.iniFile, self.section, 'take focus')
        self.text = config_parser.ConfigSectionMap(self.iniFile, self.section, 'text')
        self.textVariable = config_parser.ConfigSectionMap(self.iniFile, self.section, 'text variable')
        self.underline = config_parser.ConfigSectionMap(self.iniFile, self.section, 'underline')
        self.width = config_parser.ConfigSectionMap(self.iniFile, self.section, 'width')
        self.wrapLength = config_parser.ConfigSectionMap(self.iniFile, self.section, 'wrap length')
        return self