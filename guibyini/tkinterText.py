__author__ = 'chris.maue'

import config_parser

class Text(object):
    def __init__(self):
        self.autoSeparators = str()
        self.backgroundColor = str()
        self.backgroundStipple = str()
        self.borderwidth = str()
        self.cursor = str()
        self.exportSelection = str()
        self.font = str()
        self.fontSize = str()
        self.foregroundColor = str()
        self.foregroundStipple = str()
        self.height = str()
        self.highlightBackgroundColor = str()
        self.highlightColor = str()
        self.highlightThickness = str()
        self.insertBackground = str()
        self.insertBorderwidth = str()
        self.insertOffTime = str()
        self.insertOnTime = str()
        self.insertWidth = str()
        self.justify = str()
        self.lmargin1 = str()
        self.lmargin2 = str()
        self.maxUndo = str()
        self.padX = str()
        self.padY = str()
        self.offset = str()
        self.overstrike = str()
        self.relief = str()
        self.rmargin = str()
        self.selectBackgroundColor = str()
        self.selectForegroundColor = str()
        self.selectBorderwidth = str()
        self.setGrid = str()
        self.spacing1 = str()
        self.spacing2 = str()
        self.spacing3 = str()
        self.state = str()
        self.tabs = str()
        self.takeFocus = str()
        self.text = str()
        self.underline = str()
        self.undo = str()
        self.width = str()
        self.wrap = str()
        self.xScrollCommand = str()
        self.yScrollCommand = str()
        self.iniFile = str()
        self.section = str()

    def read_settings(self):
        self.autoSeparators = config_parser.ConfigSectionMap(self.iniFile, self.section, 'auto separators')
        self.backgroundColor = config_parser.ConfigSectionMap(self.iniFile, self.section, 'background color')
        self.backgroundStipple = config_parser.ConfigSectionMap(self.iniFile, self.section, 'background stipple')
        self.borderwidth = config_parser.ConfigSectionMap(self.iniFile, self.section, 'border width')
        self.cursor = config_parser.ConfigSectionMap(self.iniFile, self.section, 'cursor')
        self.exportSelection = config_parser.ConfigSectionMap(self.iniFile, self.section, 'export selection')
        self.font = config_parser.ConfigSectionMap(self.iniFile, self.section, 'font')
        self.fontSize = config_parser.ConfigSectionMap(self.iniFile, self.section, 'font size')
        self.foregroundColor = config_parser.ConfigSectionMap(self.iniFile, self.section, 'foreground color')
        self.foregroundStipple = config_parser.ConfigSectionMap(self.iniFile, self.section, 'foreground stipple')
        self.height = config_parser.ConfigSectionMap(self.iniFile, self.section, 'height')
        self.highlightBackgroundColor = config_parser.ConfigSectionMap(self.iniFile, self.section,
                                                                       'highlight background color')
        self.highlightColor = config_parser.ConfigSectionMap(self.iniFile, self.section, 'highlight color')
        self.highlightThickness = config_parser.ConfigSectionMap(self.iniFile, self.section, 'highlight thickness')
        self.insertBackground = config_parser.ConfigSectionMap(self.iniFile, self.section, 'insert background')
        self.insertBorderwidth = config_parser.ConfigSectionMap(self.iniFile, self.section, 'insert border width')
        self.insertOffTime = config_parser.ConfigSectionMap(self.iniFile, self.section, 'insert off time')
        self.insertOnTime = config_parser.ConfigSectionMap(self.iniFile, self.section, 'insert on time')
        self.insertWidth = config_parser.ConfigSectionMap(self.iniFile, self.section, 'insert width')
        self.justify = config_parser.ConfigSectionMap(self.iniFile, self.section, 'justify')
        self.lmargin1 = config_parser.ConfigSectionMap(self.iniFile, self.section, 'lmargin1')
        self.lmargin2 = config_parser.ConfigSectionMap(self.iniFile, self.section, 'lmargin2')
        self.maxUndo = config_parser.ConfigSectionMap(self.iniFile, self.section, 'max undo')
        self.padX = config_parser.ConfigSectionMap(self.iniFile, self.section, 'pad x')
        self.padY = config_parser.ConfigSectionMap(self.iniFile, self.section, 'pad y')
        self.offset = config_parser.ConfigSectionMap(self.iniFile, self.section, 'offset')
        self.overstrike = config_parser.ConfigSectionMap(self.iniFile, self.section, 'overstrike')
        self.relief = config_parser.ConfigSectionMap(self.iniFile, self.section, 'relief')
        self.rmargin = config_parser.ConfigSectionMap(self.iniFile, self.section, 'rmargin')
        self.selectBackgroundColor =config_parser.ConfigSectionMap(self.iniFile, self.section,
                                                                   'select background color')
        self.selectForegroundColor = config_parser.ConfigSectionMap(self.iniFile, self.section,
                                                                    'select foreground color')
        self.selectBorderwidth = config_parser.ConfigSectionMap(self.iniFile, self.section, 'select border width')
        self.setGrid = config_parser.ConfigSectionMap(self.iniFile, self.section, 'set grid')
        self.spacing1 = config_parser.ConfigSectionMap(self.iniFile, self.section, 'spacing1')
        self.spacing2 = config_parser.ConfigSectionMap(self.iniFile, self.section, 'spacing2')
        self.spacing3 = config_parser.ConfigSectionMap(self.iniFile, self.section, 'spacing3')
        self.state = config_parser.ConfigSectionMap(self.iniFile, self.section, 'state')
        self.tabs = config_parser.ConfigSectionMap(self.iniFile, self.section, 'tabs')
        self.takeFocus = config_parser.ConfigSectionMap(self.iniFile, self.section, 'take focus')
        self.text = config_parser.ConfigSectionMap(self.iniFile, self.section, 'text')
        self.underline = config_parser.ConfigSectionMap(self.iniFile, self.section, 'underline')
        self.undo = config_parser.ConfigSectionMap(self.iniFile, self.section, 'undo')
        self.width = config_parser.ConfigSectionMap(self.iniFile, self.section, 'width')
        self.wrap = config_parser.ConfigSectionMap(self.iniFile, self.section, 'wrap')
        self.xScrollCommand = config_parser.ConfigSectionMap(self.iniFile, self.section, 'x scroll command')
        self.yScrollCommand = config_parser.ConfigSectionMap(self.iniFile, self.section, 'y scroll command')
        return self